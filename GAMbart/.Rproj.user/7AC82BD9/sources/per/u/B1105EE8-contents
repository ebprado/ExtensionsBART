library(MASS)
data("mcycle")
head(mcycle)
times = mcycle$times
accel = mcycle$accel
plot(times, accel)
x = cbind(times, rnorm(length(times)))
y = accel

# Run GAM-BART
set.seed(99)
fit.gam.bart = gam_bart(x, y, str = 'splines', ntrees = 5, nburn = 100, npost = 100, df=3, dg=3, ancestors = FALSE, penalty = 'ridge')
lines(times, apply(fit.gam.bart$y_hat,2,mean), col='blue', lty=2)

fit.gam.bart2 = gam_bart(x, y, str = 'splines', ntrees = 5, nburn = 100, npost = 100, df=3, dg=3, ancestors = FALSE, penalty = 'EM')
lines(times, apply(fit.gam.bart2$y_hat,2,mean), col='red', lty=2)

n = 300
beta0 = 0.5
beta1 = 2.5
beta2 = -1.5
x1 = rnorm(n)
x2 = rnorm(n)
y = rnorm(n, beta0 + beta1*x1 + beta2*x2, sd = 1)
db = data.frame(cbind(y,x1,x2))
x = cbind(1,x1,x2)
lm(y ~ x1 + x2, data=db)

lambda = seq(0,1000,by=0.5)
save = NULL
for (i in 1:length(lambda)){
  estimates = solve(t(x)%*%x + lambda[i]*diag(3), t(x)%*%y)  
  save = rbind(save, cbind(estimates, lambda = lambda[i], iter = i))
}

plot(save[,3], save[,1])




library(rdist)
library(amap)
library(lsa)
set.seed(001)
n=100
a = matrix(rnorm(n), ncol=10)
b = matrix(rnorm(n, 10), ncol=10)
x = as.data.frame(matrix(cdist(a, b, metric = 'correlation'), ncol=1))

data = rbind(a,b)

X <- Kmeans(data, 1, iter.max = 10, nstart = 1, method = "pearson")
X$cluster
X$centers
X$withinss
X$size

xx = kmeans(data, 5, nstart = 25)
xx$cluster


library(rdist)
library(amap)
library(lsa)
set.seed(001)
n=100
a = matrix(rnorm(n), ncol=10)
b = matrix(rnorm(n, 10), ncol=10)

# Cosine metric
my_metric = function(v,w){
  1-cosine(v,w)
}
cosine_cdist = as.data.frame(matrix(cdist(a, b, metric = my_metric), ncol=1))

Dist(data, method='pearson')










##simulate data (example from Friedman MARS paper)
f = function(x){
  10*sin(pi*x[,1]*x[,2]) + 20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma = 1.0  #y = f(x) + sigma*z , z~N(0,1)
n = 100      #number of observations
set.seed(99)
x=matrix(runif(n*10),n,10) #10 variables, only first 5 matter
Ey = f(x)
y=Ey+sigma*rnorm(n)
lmFit = lm(y~.,data.frame(x,y)) #compare lm fit to BART later
plot(y, lmFit$fitted.values); abline(0,1, col=2)
##test BART with token run to ensure installation works
library(BART)
set.seed(99)
bartFit = wbart(x,y,sparse = TRUE, power = 2, base = 0.05)
plot(y, bartFit$yhat.train.mean); abline(0,1)

library(GAMbart)

## Many covariates per tree
set.seed(001)
gambart.fit2 = gam_bart(x,y, str='original', penalty_add_cov = TRUE, penalty_lambda = 2, one_var_per_tree = FALSE, nburn = 100, npost = 100)
plot(y, apply(gambart.fit2$y_hat,2,mean)); abline(0,1, col=2)
cor(y, apply(gambart.fit2$y_hat,2,mean))
gambart.fit2$trees[[100]]

gambart.fit3= gam_bart(x,y, str='original', penalty_add_cov = FALSE, one_var_per_tree = FALSE, nburn = 100, npost = 100)
plot(y, apply(gambart.fit3$y_hat,2,mean)); abline(0,1, col=3)
cor(y, apply(gambart.fit3$y_hat,2,mean))

